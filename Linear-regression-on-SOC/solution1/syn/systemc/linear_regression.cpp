// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "linear_regression.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic linear_regression::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic linear_regression::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<73> linear_regression::ap_ST_fsm_state1 = "1";
const sc_lv<73> linear_regression::ap_ST_fsm_state2 = "10";
const sc_lv<73> linear_regression::ap_ST_fsm_state3 = "100";
const sc_lv<73> linear_regression::ap_ST_fsm_state4 = "1000";
const sc_lv<73> linear_regression::ap_ST_fsm_state5 = "10000";
const sc_lv<73> linear_regression::ap_ST_fsm_state6 = "100000";
const sc_lv<73> linear_regression::ap_ST_fsm_state7 = "1000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state8 = "10000000";
const sc_lv<73> linear_regression::ap_ST_fsm_pp0_stage0 = "100000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state12 = "1000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state13 = "10000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state14 = "100000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state15 = "1000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state16 = "10000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state17 = "100000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state18 = "1000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state19 = "10000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state20 = "100000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state21 = "1000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state22 = "10000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state23 = "100000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state24 = "1000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state25 = "10000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state26 = "100000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state27 = "1000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state28 = "10000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state29 = "100000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state30 = "1000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state31 = "10000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state32 = "100000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state33 = "1000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state34 = "10000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state35 = "100000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state36 = "1000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state37 = "10000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state38 = "100000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state39 = "1000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state40 = "10000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state41 = "100000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state42 = "1000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state43 = "10000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state44 = "100000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state45 = "1000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state46 = "10000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state47 = "100000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state48 = "1000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state49 = "10000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state50 = "100000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state51 = "1000000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state52 = "10000000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state53 = "100000000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state54 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state55 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state56 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state57 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state58 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state59 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state60 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state61 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state62 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state63 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state64 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state65 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state66 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state67 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state68 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state69 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_pp1_stage0 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state72 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state73 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state74 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state75 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<73> linear_regression::ap_ST_fsm_state76 = "1000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> linear_regression::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool linear_regression::ap_const_boolean_1 = true;
const sc_lv<32> linear_regression::ap_const_lv32_12 = "10010";
const sc_lv<1> linear_regression::ap_const_lv1_1 = "1";
const sc_lv<32> linear_regression::ap_const_lv32_43 = "1000011";
const bool linear_regression::ap_const_boolean_0 = false;
const sc_lv<1> linear_regression::ap_const_lv1_0 = "0";
const sc_lv<32> linear_regression::ap_const_lv32_48 = "1001000";
const sc_lv<32> linear_regression::ap_const_lv32_1 = "1";
const sc_lv<32> linear_regression::ap_const_lv32_8 = "1000";
const int linear_regression::C_S_AXI_DATA_WIDTH = "100000";
const int linear_regression::C_M_AXI_GMEM_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int linear_regression::C_M_AXI_GMEM_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int linear_regression::C_M_AXI_GMEM_CACHE_VALUE = "11";
const int linear_regression::C_M_AXI_DATA_WIDTH = "100000";
const sc_lv<32> linear_regression::ap_const_lv32_14 = "10100";
const sc_lv<32> linear_regression::ap_const_lv32_1F = "11111";
const sc_lv<32> linear_regression::ap_const_lv32_18 = "11000";
const sc_lv<32> linear_regression::ap_const_lv32_23 = "100011";
const sc_lv<32> linear_regression::ap_const_lv32_2B = "101011";
const sc_lv<32> linear_regression::ap_const_lv32_39 = "111001";
const sc_lv<32> linear_regression::ap_const_lv32_3D = "111101";
const sc_lv<32> linear_regression::ap_const_lv32_30 = "110000";
const sc_lv<32> linear_regression::ap_const_lv32_35 = "110101";
const sc_lv<32> linear_regression::ap_const_lv32_7 = "111";
const sc_lv<32> linear_regression::ap_const_lv32_A = "1010";
const sc_lv<32> linear_regression::ap_const_lv32_B = "1011";
const sc_lv<32> linear_regression::ap_const_lv32_C = "1100";
const sc_lv<32> linear_regression::ap_const_lv32_D = "1101";
const sc_lv<32> linear_regression::ap_const_lv32_E = "1110";
const sc_lv<32> linear_regression::ap_const_lv32_F = "1111";
const sc_lv<32> linear_regression::ap_const_lv32_10 = "10000";
const sc_lv<32> linear_regression::ap_const_lv32_13 = "10011";
const sc_lv<32> linear_regression::ap_const_lv32_1D = "11101";
const sc_lv<32> linear_regression::ap_const_lv32_1E = "11110";
const sc_lv<32> linear_regression::ap_const_lv32_28 = "101000";
const sc_lv<32> linear_regression::ap_const_lv32_42 = "1000010";
const sc_lv<8> linear_regression::ap_const_lv8_0 = "00000000";
const sc_lv<32> linear_regression::ap_const_lv32_9 = "1001";
const sc_lv<7> linear_regression::ap_const_lv7_0 = "0000000";
const sc_lv<32> linear_regression::ap_const_lv32_11 = "10001";
const sc_lv<11> linear_regression::ap_const_lv11_0 = "00000000000";
const sc_lv<2> linear_regression::ap_const_lv2_0 = "00";
const sc_lv<32> linear_regression::ap_const_lv32_C2 = "11000010";
const sc_lv<3> linear_regression::ap_const_lv3_0 = "000";
const sc_lv<4> linear_regression::ap_const_lv4_0 = "0000";
const sc_lv<32> linear_regression::ap_const_lv32_2 = "10";
const sc_lv<4> linear_regression::ap_const_lv4_F = "1111";
const sc_lv<32> linear_regression::ap_const_lv32_3F800000 = "111111100000000000000000000000";
const sc_lv<32> linear_regression::ap_const_lv32_19 = "11001";
const sc_lv<32> linear_regression::ap_const_lv32_24 = "100100";
const sc_lv<32> linear_regression::ap_const_lv32_2C = "101100";
const sc_lv<32> linear_regression::ap_const_lv32_31 = "110001";
const sc_lv<32> linear_regression::ap_const_lv32_3E = "111110";
const sc_lv<32> linear_regression::ap_const_lv32_3C23D70A = "111100001000111101011100001010";
const sc_lv<32> linear_regression::ap_const_lv32_15 = "10101";
const sc_lv<32> linear_regression::ap_const_lv32_20 = "100000";
const sc_lv<32> linear_regression::ap_const_lv32_36 = "110110";
const sc_lv<32> linear_regression::ap_const_lv32_3A = "111010";
const sc_lv<8> linear_regression::ap_const_lv8_C2 = "11000010";
const sc_lv<8> linear_regression::ap_const_lv8_1 = "1";
const sc_lv<7> linear_regression::ap_const_lv7_1 = "1";
const sc_lv<7> linear_regression::ap_const_lv7_60 = "1100000";
const sc_lv<7> linear_regression::ap_const_lv7_61 = "1100001";
const sc_lv<8> linear_regression::ap_const_lv8_61 = "1100001";
const sc_lv<56> linear_regression::ap_const_lv56_0 = "00000000000000000000000000000000000000000000000000000000";
const sc_lv<11> linear_regression::ap_const_lv11_5DC = "10111011100";
const sc_lv<11> linear_regression::ap_const_lv11_1 = "1";
const sc_lv<2> linear_regression::ap_const_lv2_2 = "10";
const sc_lv<2> linear_regression::ap_const_lv2_1 = "1";

linear_regression::linear_regression(sc_module_name name) : sc_module(name), mVcdFile(0) {
    linear_regression_AXILiteS_s_axi_U = new linear_regression_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("linear_regression_AXILiteS_s_axi_U");
    linear_regression_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    linear_regression_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    linear_regression_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    linear_regression_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    linear_regression_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    linear_regression_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    linear_regression_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    linear_regression_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    linear_regression_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    linear_regression_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    linear_regression_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    linear_regression_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    linear_regression_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    linear_regression_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    linear_regression_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    linear_regression_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    linear_regression_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    linear_regression_AXILiteS_s_axi_U->ACLK(ap_clk);
    linear_regression_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    linear_regression_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    linear_regression_AXILiteS_s_axi_U->ap_start(ap_start);
    linear_regression_AXILiteS_s_axi_U->interrupt(interrupt);
    linear_regression_AXILiteS_s_axi_U->ap_ready(ap_ready);
    linear_regression_AXILiteS_s_axi_U->ap_done(ap_done);
    linear_regression_AXILiteS_s_axi_U->ap_idle(ap_idle);
    linear_regression_AXILiteS_s_axi_U->input_r(input_r);
    linear_regression_AXILiteS_s_axi_U->output_r(output_r);
    linear_regression_gmem_m_axi_U = new linear_regression_gmem_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_GMEM_ID_WIDTH,C_M_AXI_GMEM_ADDR_WIDTH,C_M_AXI_GMEM_DATA_WIDTH,C_M_AXI_GMEM_AWUSER_WIDTH,C_M_AXI_GMEM_ARUSER_WIDTH,C_M_AXI_GMEM_WUSER_WIDTH,C_M_AXI_GMEM_RUSER_WIDTH,C_M_AXI_GMEM_BUSER_WIDTH,C_M_AXI_GMEM_USER_VALUE,C_M_AXI_GMEM_PROT_VALUE,C_M_AXI_GMEM_CACHE_VALUE>("linear_regression_gmem_m_axi_U");
    linear_regression_gmem_m_axi_U->AWVALID(m_axi_gmem_AWVALID);
    linear_regression_gmem_m_axi_U->AWREADY(m_axi_gmem_AWREADY);
    linear_regression_gmem_m_axi_U->AWADDR(m_axi_gmem_AWADDR);
    linear_regression_gmem_m_axi_U->AWID(m_axi_gmem_AWID);
    linear_regression_gmem_m_axi_U->AWLEN(m_axi_gmem_AWLEN);
    linear_regression_gmem_m_axi_U->AWSIZE(m_axi_gmem_AWSIZE);
    linear_regression_gmem_m_axi_U->AWBURST(m_axi_gmem_AWBURST);
    linear_regression_gmem_m_axi_U->AWLOCK(m_axi_gmem_AWLOCK);
    linear_regression_gmem_m_axi_U->AWCACHE(m_axi_gmem_AWCACHE);
    linear_regression_gmem_m_axi_U->AWPROT(m_axi_gmem_AWPROT);
    linear_regression_gmem_m_axi_U->AWQOS(m_axi_gmem_AWQOS);
    linear_regression_gmem_m_axi_U->AWREGION(m_axi_gmem_AWREGION);
    linear_regression_gmem_m_axi_U->AWUSER(m_axi_gmem_AWUSER);
    linear_regression_gmem_m_axi_U->WVALID(m_axi_gmem_WVALID);
    linear_regression_gmem_m_axi_U->WREADY(m_axi_gmem_WREADY);
    linear_regression_gmem_m_axi_U->WDATA(m_axi_gmem_WDATA);
    linear_regression_gmem_m_axi_U->WSTRB(m_axi_gmem_WSTRB);
    linear_regression_gmem_m_axi_U->WLAST(m_axi_gmem_WLAST);
    linear_regression_gmem_m_axi_U->WID(m_axi_gmem_WID);
    linear_regression_gmem_m_axi_U->WUSER(m_axi_gmem_WUSER);
    linear_regression_gmem_m_axi_U->ARVALID(m_axi_gmem_ARVALID);
    linear_regression_gmem_m_axi_U->ARREADY(m_axi_gmem_ARREADY);
    linear_regression_gmem_m_axi_U->ARADDR(m_axi_gmem_ARADDR);
    linear_regression_gmem_m_axi_U->ARID(m_axi_gmem_ARID);
    linear_regression_gmem_m_axi_U->ARLEN(m_axi_gmem_ARLEN);
    linear_regression_gmem_m_axi_U->ARSIZE(m_axi_gmem_ARSIZE);
    linear_regression_gmem_m_axi_U->ARBURST(m_axi_gmem_ARBURST);
    linear_regression_gmem_m_axi_U->ARLOCK(m_axi_gmem_ARLOCK);
    linear_regression_gmem_m_axi_U->ARCACHE(m_axi_gmem_ARCACHE);
    linear_regression_gmem_m_axi_U->ARPROT(m_axi_gmem_ARPROT);
    linear_regression_gmem_m_axi_U->ARQOS(m_axi_gmem_ARQOS);
    linear_regression_gmem_m_axi_U->ARREGION(m_axi_gmem_ARREGION);
    linear_regression_gmem_m_axi_U->ARUSER(m_axi_gmem_ARUSER);
    linear_regression_gmem_m_axi_U->RVALID(m_axi_gmem_RVALID);
    linear_regression_gmem_m_axi_U->RREADY(m_axi_gmem_RREADY);
    linear_regression_gmem_m_axi_U->RDATA(m_axi_gmem_RDATA);
    linear_regression_gmem_m_axi_U->RLAST(m_axi_gmem_RLAST);
    linear_regression_gmem_m_axi_U->RID(m_axi_gmem_RID);
    linear_regression_gmem_m_axi_U->RUSER(m_axi_gmem_RUSER);
    linear_regression_gmem_m_axi_U->RRESP(m_axi_gmem_RRESP);
    linear_regression_gmem_m_axi_U->BVALID(m_axi_gmem_BVALID);
    linear_regression_gmem_m_axi_U->BREADY(m_axi_gmem_BREADY);
    linear_regression_gmem_m_axi_U->BRESP(m_axi_gmem_BRESP);
    linear_regression_gmem_m_axi_U->BID(m_axi_gmem_BID);
    linear_regression_gmem_m_axi_U->BUSER(m_axi_gmem_BUSER);
    linear_regression_gmem_m_axi_U->ACLK(ap_clk);
    linear_regression_gmem_m_axi_U->ARESET(ap_rst_n_inv);
    linear_regression_gmem_m_axi_U->ACLK_EN(ap_var_for_const0);
    linear_regression_gmem_m_axi_U->I_ARVALID(gmem_ARVALID);
    linear_regression_gmem_m_axi_U->I_ARREADY(gmem_ARREADY);
    linear_regression_gmem_m_axi_U->I_ARADDR(gmem_ARADDR);
    linear_regression_gmem_m_axi_U->I_ARID(ap_var_for_const1);
    linear_regression_gmem_m_axi_U->I_ARLEN(ap_var_for_const2);
    linear_regression_gmem_m_axi_U->I_ARSIZE(ap_var_for_const3);
    linear_regression_gmem_m_axi_U->I_ARLOCK(ap_var_for_const4);
    linear_regression_gmem_m_axi_U->I_ARCACHE(ap_var_for_const5);
    linear_regression_gmem_m_axi_U->I_ARQOS(ap_var_for_const5);
    linear_regression_gmem_m_axi_U->I_ARPROT(ap_var_for_const3);
    linear_regression_gmem_m_axi_U->I_ARUSER(ap_var_for_const1);
    linear_regression_gmem_m_axi_U->I_ARBURST(ap_var_for_const4);
    linear_regression_gmem_m_axi_U->I_ARREGION(ap_var_for_const5);
    linear_regression_gmem_m_axi_U->I_RVALID(gmem_RVALID);
    linear_regression_gmem_m_axi_U->I_RREADY(gmem_RREADY);
    linear_regression_gmem_m_axi_U->I_RDATA(gmem_RDATA);
    linear_regression_gmem_m_axi_U->I_RID(gmem_RID);
    linear_regression_gmem_m_axi_U->I_RUSER(gmem_RUSER);
    linear_regression_gmem_m_axi_U->I_RRESP(gmem_RRESP);
    linear_regression_gmem_m_axi_U->I_RLAST(gmem_RLAST);
    linear_regression_gmem_m_axi_U->I_AWVALID(gmem_AWVALID);
    linear_regression_gmem_m_axi_U->I_AWREADY(gmem_AWREADY);
    linear_regression_gmem_m_axi_U->I_AWADDR(gmem_addr_reg_1133);
    linear_regression_gmem_m_axi_U->I_AWID(ap_var_for_const1);
    linear_regression_gmem_m_axi_U->I_AWLEN(ap_var_for_const6);
    linear_regression_gmem_m_axi_U->I_AWSIZE(ap_var_for_const3);
    linear_regression_gmem_m_axi_U->I_AWLOCK(ap_var_for_const4);
    linear_regression_gmem_m_axi_U->I_AWCACHE(ap_var_for_const5);
    linear_regression_gmem_m_axi_U->I_AWQOS(ap_var_for_const5);
    linear_regression_gmem_m_axi_U->I_AWPROT(ap_var_for_const3);
    linear_regression_gmem_m_axi_U->I_AWUSER(ap_var_for_const1);
    linear_regression_gmem_m_axi_U->I_AWBURST(ap_var_for_const4);
    linear_regression_gmem_m_axi_U->I_AWREGION(ap_var_for_const5);
    linear_regression_gmem_m_axi_U->I_WVALID(gmem_WVALID);
    linear_regression_gmem_m_axi_U->I_WREADY(gmem_WREADY);
    linear_regression_gmem_m_axi_U->I_WDATA(select_ln65_reg_1382);
    linear_regression_gmem_m_axi_U->I_WID(ap_var_for_const1);
    linear_regression_gmem_m_axi_U->I_WUSER(ap_var_for_const1);
    linear_regression_gmem_m_axi_U->I_WLAST(ap_var_for_const7);
    linear_regression_gmem_m_axi_U->I_WSTRB(ap_var_for_const8);
    linear_regression_gmem_m_axi_U->I_BVALID(gmem_BVALID);
    linear_regression_gmem_m_axi_U->I_BREADY(gmem_BREADY);
    linear_regression_gmem_m_axi_U->I_BRESP(gmem_BRESP);
    linear_regression_gmem_m_axi_U->I_BID(gmem_BID);
    linear_regression_gmem_m_axi_U->I_BUSER(gmem_BUSER);
    x_input_U = new linear_regressionbkb("x_input_U");
    x_input_U->clk(ap_clk);
    x_input_U->reset(ap_rst_n_inv);
    x_input_U->address0(x_input_address0);
    x_input_U->ce0(x_input_ce0);
    x_input_U->we0(x_input_we0);
    x_input_U->d0(gmem_addr_1_read_reg_1148);
    x_input_U->q0(x_input_q0);
    x_input_U->address1(x_input_address1);
    x_input_U->ce1(x_input_ce1);
    x_input_U->q1(x_input_q1);
    data_U = new linear_regressioncud("data_U");
    data_U->clk(ap_clk);
    data_U->reset(ap_rst_n_inv);
    data_U->address0(data_address0);
    data_U->ce0(data_ce0);
    data_U->we0(data_we0);
    data_U->d0(data_d0);
    data_U->q0(data_q0);
    data_U->address1(data_address1);
    data_U->ce1(data_ce1);
    data_U->we1(data_we1);
    data_U->d1(x_input_q0);
    data_U->q1(data_q1);
    data1_U = new linear_regressioncud("data1_U");
    data1_U->clk(ap_clk);
    data1_U->reset(ap_rst_n_inv);
    data1_U->address0(data1_address0);
    data1_U->ce0(data1_ce0);
    data1_U->we0(data1_we0);
    data1_U->d0(data1_d0);
    data1_U->q0(data1_q0);
    data1_U->address1(data1_address1);
    data1_U->ce1(data1_ce1);
    data1_U->we1(data1_we1);
    data1_U->d1(x_input_q0);
    data1_U->q1(data1_q1);
    y_U = new linear_regression_y("y_U");
    y_U->clk(ap_clk);
    y_U->reset(ap_rst_n_inv);
    y_U->address0(y_address0);
    y_U->ce0(y_ce0);
    y_U->we0(y_we0);
    y_U->d0(y_d0);
    y_U->q0(y_q0);
    linear_regressioneOg_U1 = new linear_regressioneOg<1,5,32,32,32>("linear_regressioneOg_U1");
    linear_regressioneOg_U1->clk(ap_clk);
    linear_regressioneOg_U1->reset(ap_rst_n_inv);
    linear_regressioneOg_U1->din0(grp_fu_639_p0);
    linear_regressioneOg_U1->din1(grp_fu_639_p1);
    linear_regressioneOg_U1->opcode(grp_fu_639_opcode);
    linear_regressioneOg_U1->ce(ap_var_for_const0);
    linear_regressioneOg_U1->dout(grp_fu_639_p2);
    linear_regressioneOg_U2 = new linear_regressioneOg<1,5,32,32,32>("linear_regressioneOg_U2");
    linear_regressioneOg_U2->clk(ap_clk);
    linear_regressioneOg_U2->reset(ap_rst_n_inv);
    linear_regressioneOg_U2->din0(grp_fu_644_p0);
    linear_regressioneOg_U2->din1(grp_fu_644_p1);
    linear_regressioneOg_U2->opcode(grp_fu_644_opcode);
    linear_regressioneOg_U2->ce(ap_var_for_const0);
    linear_regressioneOg_U2->dout(grp_fu_644_p2);
    linear_regressionfYi_U3 = new linear_regressionfYi<1,5,32,32,32>("linear_regressionfYi_U3");
    linear_regressionfYi_U3->clk(ap_clk);
    linear_regressionfYi_U3->reset(ap_rst_n_inv);
    linear_regressionfYi_U3->din0(empty_29_reg_581);
    linear_regressionfYi_U3->din1(reg_720);
    linear_regressionfYi_U3->ce(ap_var_for_const0);
    linear_regressionfYi_U3->dout(grp_fu_651_p2);
    linear_regressionfYi_U4 = new linear_regressionfYi<1,5,32,32,32>("linear_regressionfYi_U4");
    linear_regressionfYi_U4->clk(ap_clk);
    linear_regressionfYi_U4->reset(ap_rst_n_inv);
    linear_regressionfYi_U4->din0(empty_28_reg_569);
    linear_regressionfYi_U4->din1(reg_726);
    linear_regressionfYi_U4->ce(ap_var_for_const0);
    linear_regressionfYi_U4->dout(grp_fu_656_p2);
    linear_regressiong8j_U5 = new linear_regressiong8j<1,4,32,32,32>("linear_regressiong8j_U5");
    linear_regressiong8j_U5->clk(ap_clk);
    linear_regressiong8j_U5->reset(ap_rst_n_inv);
    linear_regressiong8j_U5->din0(grp_fu_665_p0);
    linear_regressiong8j_U5->din1(grp_fu_665_p1);
    linear_regressiong8j_U5->ce(ap_var_for_const0);
    linear_regressiong8j_U5->dout(grp_fu_665_p2);
    linear_regressiong8j_U6 = new linear_regressiong8j<1,4,32,32,32>("linear_regressiong8j_U6");
    linear_regressiong8j_U6->clk(ap_clk);
    linear_regressiong8j_U6->reset(ap_rst_n_inv);
    linear_regressiong8j_U6->din0(grp_fu_669_p0);
    linear_regressiong8j_U6->din1(grp_fu_669_p1);
    linear_regressiong8j_U6->ce(ap_var_for_const0);
    linear_regressiong8j_U6->dout(grp_fu_669_p2);
    linear_regressiong8j_U7 = new linear_regressiong8j<1,4,32,32,32>("linear_regressiong8j_U7");
    linear_regressiong8j_U7->clk(ap_clk);
    linear_regressiong8j_U7->reset(ap_rst_n_inv);
    linear_regressiong8j_U7->din0(grp_fu_677_p0);
    linear_regressiong8j_U7->din1(grp_fu_677_p1);
    linear_regressiong8j_U7->ce(ap_var_for_const0);
    linear_regressiong8j_U7->dout(grp_fu_677_p2);
    linear_regressiong8j_U8 = new linear_regressiong8j<1,4,32,32,32>("linear_regressiong8j_U8");
    linear_regressiong8j_U8->clk(ap_clk);
    linear_regressiong8j_U8->reset(ap_rst_n_inv);
    linear_regressiong8j_U8->din0(grp_fu_683_p0);
    linear_regressiong8j_U8->din1(grp_fu_683_p1);
    linear_regressiong8j_U8->ce(ap_var_for_const0);
    linear_regressiong8j_U8->dout(grp_fu_683_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln12_fu_838_p2);
    sensitive << ( phi_ln12_reg_399 );

    SC_METHOD(thread_add_ln13_1_fu_885_p2);
    sensitive << ( phi_ln13_1_reg_445 );

    SC_METHOD(thread_add_ln13_2_fu_895_p2);
    sensitive << ( zext_ln13_reg_1193 );
    sensitive << ( zext_ln13_1_fu_891_p1 );

    SC_METHOD(thread_add_ln13_3_fu_873_p2);
    sensitive << ( phi_mul_reg_434 );

    SC_METHOD(thread_add_ln14_fu_911_p2);
    sensitive << ( phi_ln14_reg_456 );

    SC_METHOD(thread_add_ln21_fu_949_p2);
    sensitive << ( zext_ln15_fu_928_p1 );

    SC_METHOD(thread_add_ln38_fu_1022_p2);
    sensitive << ( zext_ln37_1_fu_1018_p1 );

    SC_METHOD(thread_add_ln45_fu_1082_p2);
    sensitive << ( zext_ln43_2_fu_1050_p1 );

    SC_METHOD(thread_add_ln65_fu_1099_p2);
    sensitive << ( phi_ln65_reg_628 );

    SC_METHOD(thread_add_ln8_fu_789_p2);
    sensitive << ( ap_phi_mux_phi_ln8_phi_fu_380_p4 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state56);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state57);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state60);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state61);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state64);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state65);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state76);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln8_reg_1139 );
    sensitive << ( gmem_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln8_reg_1139 );
    sensitive << ( gmem_RVALID );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_01001);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_state71_io );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_state71_io );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter1);
    sensitive << ( icmp_ln8_reg_1139 );
    sensitive << ( gmem_RVALID );

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state21_io);
    sensitive << ( icmp_ln32_fu_988_p2 );
    sensitive << ( gmem_AWREADY );

    SC_METHOD(thread_ap_block_state70_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state71_io);
    sensitive << ( icmp_ln65_reg_1373 );
    sensitive << ( gmem_WREADY );

    SC_METHOD(thread_ap_block_state71_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter0);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state9);
    sensitive << ( icmp_ln8_fu_783_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state70);
    sensitive << ( icmp_ln65_fu_1093_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( gmem_BVALID );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_ap_phi_mux_phi_ln11_phi_fu_392_p4);
    sensitive << ( phi_ln11_reg_388 );

    SC_METHOD(thread_ap_phi_mux_phi_ln12_1_phi_fu_415_p4);
    sensitive << ( phi_ln12_1_reg_411 );

    SC_METHOD(thread_ap_phi_mux_phi_ln8_phi_fu_380_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln8_reg_1139 );
    sensitive << ( phi_ln8_reg_376 );
    sensitive << ( add_ln8_reg_1143 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( gmem_BVALID );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_data1_address0);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( zext_ln17_reg_1232 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( zext_ln13_2_fu_900_p1 );
    sensitive << ( zext_ln38_fu_1028_p1 );
    sensitive << ( zext_ln45_fu_1088_p1 );

    SC_METHOD(thread_data1_address1);
    sensitive << ( zext_ln21_reg_1238 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( zext_ln37_fu_1012_p1 );
    sensitive << ( zext_ln43_fu_1045_p1 );

    SC_METHOD(thread_data1_ce0);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_data1_ce1);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_data1_d0);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_data1_we0);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_data1_we1);
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_data_address0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( zext_ln12_fu_858_p1 );
    sensitive << ( zext_ln17_1_fu_968_p1 );
    sensitive << ( tmp_27_fu_1073_p3 );

    SC_METHOD(thread_data_address1);
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( tmp_25_fu_979_p3 );
    sensitive << ( zext_ln43_1_fu_1062_p1 );

    SC_METHOD(thread_data_ce0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_data_ce1);
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_data_d0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_data_we0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_data_we1);
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_empty_5_fu_764_p1);
    sensitive << ( input1_reg_1122 );

    SC_METHOD(thread_empty_fu_774_p1);
    sensitive << ( output3_reg_1117 );

    SC_METHOD(thread_gmem_ARADDR);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( gmem_ARREADY );
    sensitive << ( empty_5_fu_764_p1 );

    SC_METHOD(thread_gmem_ARVALID);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( gmem_ARREADY );

    SC_METHOD(thread_gmem_AWVALID);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( icmp_ln32_fu_988_p2 );
    sensitive << ( ap_block_state21_io );

    SC_METHOD(thread_gmem_BREADY);
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( gmem_BVALID );

    SC_METHOD(thread_gmem_RREADY);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln8_reg_1139 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_gmem_WVALID);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln65_reg_1373 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_gmem_blk_n_AR);
    sensitive << ( m_axi_gmem_ARREADY );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_gmem_blk_n_AW);
    sensitive << ( m_axi_gmem_AWREADY );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( icmp_ln32_fu_988_p2 );

    SC_METHOD(thread_gmem_blk_n_B);
    sensitive << ( m_axi_gmem_BVALID );
    sensitive << ( ap_CS_fsm_state76 );

    SC_METHOD(thread_gmem_blk_n_R);
    sensitive << ( m_axi_gmem_RVALID );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln8_reg_1139 );

    SC_METHOD(thread_gmem_blk_n_W);
    sensitive << ( m_axi_gmem_WREADY );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( icmp_ln65_reg_1373 );

    SC_METHOD(thread_grp_fu_639_opcode);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state65 );

    SC_METHOD(thread_grp_fu_639_p0);
    sensitive << ( reg_706 );
    sensitive << ( reg_732 );
    sensitive << ( empty_23_reg_511 );
    sensitive << ( empty_26_reg_546 );
    sensitive << ( empty_31_reg_605 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state65 );

    SC_METHOD(thread_grp_fu_639_p1);
    sensitive << ( reg_706 );
    sensitive << ( reg_713 );
    sensitive << ( empty_26_reg_546 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state65 );

    SC_METHOD(thread_grp_fu_644_opcode);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state65 );

    SC_METHOD(thread_grp_fu_644_p0);
    sensitive << ( reg_720 );
    sensitive << ( reg_738 );
    sensitive << ( empty_22_reg_499 );
    sensitive << ( empty_25_reg_534 );
    sensitive << ( empty_30_reg_593 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state65 );

    SC_METHOD(thread_grp_fu_644_p1);
    sensitive << ( reg_713 );
    sensitive << ( reg_726 );
    sensitive << ( empty_25_reg_534 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state65 );

    SC_METHOD(thread_grp_fu_665_p0);
    sensitive << ( reg_693 );
    sensitive << ( reg_706 );
    sensitive << ( reg_732 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( empty_31_reg_605 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state61 );

    SC_METHOD(thread_grp_fu_665_p1);
    sensitive << ( y_load_reg_1285 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( data_load_reg_1329 );
    sensitive << ( empty_23_reg_511 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state61 );

    SC_METHOD(thread_grp_fu_669_p0);
    sensitive << ( reg_693 );
    sensitive << ( reg_699 );
    sensitive << ( reg_713 );
    sensitive << ( reg_738 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( empty_30_reg_593 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state61 );

    SC_METHOD(thread_grp_fu_669_p1);
    sensitive << ( y_load_reg_1285 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( data_load_1_reg_1335 );
    sensitive << ( empty_22_reg_499 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state61 );

    SC_METHOD(thread_grp_fu_677_p0);
    sensitive << ( reg_699 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( empty_29_reg_581 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_grp_fu_677_p1);
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( data_load_reg_1329 );
    sensitive << ( empty_23_reg_511 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_grp_fu_683_p0);
    sensitive << ( reg_699 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( empty_28_reg_569 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_grp_fu_683_p1);
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( data_load_1_reg_1335 );
    sensitive << ( empty_22_reg_499 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_i_1_fu_1006_p2);
    sensitive << ( i3_0_reg_558 );

    SC_METHOD(thread_i_2_fu_994_p2);
    sensitive << ( i2_0_reg_523 );

    SC_METHOD(thread_i_3_fu_1039_p2);
    sensitive << ( i4_0_reg_617 );

    SC_METHOD(thread_i_fu_938_p2);
    sensitive << ( i_0_reg_467 );

    SC_METHOD(thread_icmp_ln12_fu_863_p2);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( phi_ln12_reg_399 );
    sensitive << ( ap_phi_mux_phi_ln12_1_phi_fu_415_p4 );

    SC_METHOD(thread_icmp_ln13_fu_905_p2);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( phi_ln13_1_reg_445 );

    SC_METHOD(thread_icmp_ln14_fu_922_p2);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( phi_ln14_reg_456 );

    SC_METHOD(thread_icmp_ln15_fu_932_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( i_0_reg_467 );

    SC_METHOD(thread_icmp_ln32_fu_988_p2);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_block_state21_io );
    sensitive << ( i2_0_reg_523 );

    SC_METHOD(thread_icmp_ln35_fu_1000_p2);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( i3_0_reg_558 );

    SC_METHOD(thread_icmp_ln41_fu_1033_p2);
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( i4_0_reg_617 );

    SC_METHOD(thread_icmp_ln65_fu_1093_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( phi_ln65_reg_628 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_icmp_ln8_fu_783_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_phi_ln8_phi_fu_380_p4 );

    SC_METHOD(thread_or_ln18_fu_973_p2);
    sensitive << ( tmp_24_fu_960_p3 );

    SC_METHOD(thread_or_ln44_fu_1067_p2);
    sensitive << ( tmp_26_fu_1054_p3 );

    SC_METHOD(thread_select_ln11_1_fu_820_p3);
    sensitive << ( phi_ln11_reg_388 );
    sensitive << ( theta_0_0_fu_162 );

    SC_METHOD(thread_select_ln11_fu_812_p3);
    sensitive << ( phi_ln11_reg_388 );
    sensitive << ( theta_1_0_fu_166 );

    SC_METHOD(thread_select_ln65_fu_1109_p3);
    sensitive << ( theta_1_2_reg_479 );
    sensitive << ( theta_0_2_reg_489 );
    sensitive << ( trunc_ln65_fu_1105_p1 );

    SC_METHOD(thread_tmp_24_fu_960_p3);
    sensitive << ( i_0_reg_467 );

    SC_METHOD(thread_tmp_25_fu_979_p3);
    sensitive << ( or_ln18_fu_973_p2 );

    SC_METHOD(thread_tmp_26_fu_1054_p3);
    sensitive << ( i4_0_reg_617 );

    SC_METHOD(thread_tmp_27_fu_1073_p3);
    sensitive << ( or_ln44_fu_1067_p2 );

    SC_METHOD(thread_tmp_fu_850_p3);
    sensitive << ( phi_ln12_reg_399 );
    sensitive << ( phi_ln12_1_reg_411 );

    SC_METHOD(thread_trunc_ln65_fu_1105_p1);
    sensitive << ( phi_ln65_reg_628 );

    SC_METHOD(thread_x_input_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( zext_ln17_fu_944_p1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( zext_ln8_fu_795_p1 );

    SC_METHOD(thread_x_input_address1);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( zext_ln21_fu_955_p1 );

    SC_METHOD(thread_x_input_ce0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_x_input_ce1);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_x_input_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln8_reg_1139_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_xor_ln11_fu_806_p2);
    sensitive << ( phi_ln11_reg_388 );

    SC_METHOD(thread_xor_ln12_fu_844_p2);
    sensitive << ( phi_ln12_1_reg_411 );

    SC_METHOD(thread_xor_ln13_fu_879_p2);
    sensitive << ( phi_ln13_reg_422 );

    SC_METHOD(thread_y_address0);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( zext_ln17_reg_1232 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( zext_ln14_fu_917_p1 );
    sensitive << ( zext_ln37_fu_1012_p1 );

    SC_METHOD(thread_y_ce0);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_y_d0);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( x_input_q1 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_y_we0);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_zext_ln12_fu_858_p1);
    sensitive << ( tmp_fu_850_p3 );

    SC_METHOD(thread_zext_ln13_1_fu_891_p1);
    sensitive << ( phi_ln13_1_reg_445 );

    SC_METHOD(thread_zext_ln13_2_fu_900_p1);
    sensitive << ( add_ln13_2_fu_895_p2 );

    SC_METHOD(thread_zext_ln13_fu_869_p1);
    sensitive << ( phi_mul_reg_434 );

    SC_METHOD(thread_zext_ln14_fu_917_p1);
    sensitive << ( phi_ln14_reg_456 );

    SC_METHOD(thread_zext_ln15_fu_928_p1);
    sensitive << ( i_0_reg_467 );

    SC_METHOD(thread_zext_ln17_1_fu_968_p1);
    sensitive << ( tmp_24_fu_960_p3 );

    SC_METHOD(thread_zext_ln17_fu_944_p1);
    sensitive << ( i_0_reg_467 );

    SC_METHOD(thread_zext_ln21_fu_955_p1);
    sensitive << ( add_ln21_fu_949_p2 );

    SC_METHOD(thread_zext_ln37_1_fu_1018_p1);
    sensitive << ( i3_0_reg_558 );

    SC_METHOD(thread_zext_ln37_fu_1012_p1);
    sensitive << ( i3_0_reg_558 );

    SC_METHOD(thread_zext_ln38_fu_1028_p1);
    sensitive << ( add_ln38_fu_1022_p2 );

    SC_METHOD(thread_zext_ln43_1_fu_1062_p1);
    sensitive << ( tmp_26_fu_1054_p3 );

    SC_METHOD(thread_zext_ln43_2_fu_1050_p1);
    sensitive << ( i4_0_reg_617 );

    SC_METHOD(thread_zext_ln43_fu_1045_p1);
    sensitive << ( i4_0_reg_617 );

    SC_METHOD(thread_zext_ln45_fu_1088_p1);
    sensitive << ( add_ln45_fu_1082_p2 );

    SC_METHOD(thread_zext_ln8_fu_795_p1);
    sensitive << ( phi_ln8_reg_376_pp0_iter1_reg );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( icmp_ln32_fu_988_p2 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( gmem_ARREADY );
    sensitive << ( gmem_BVALID );
    sensitive << ( icmp_ln8_fu_783_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( icmp_ln15_fu_932_p2 );
    sensitive << ( ap_block_state21_io );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( icmp_ln35_fu_1000_p2 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( icmp_ln41_fu_1033_p2 );
    sensitive << ( icmp_ln65_fu_1093_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_phi_mux_phi_ln11_phi_fu_392_p4 );
    sensitive << ( ap_phi_mux_phi_ln12_1_phi_fu_415_p4 );
    sensitive << ( icmp_ln12_fu_863_p2 );
    sensitive << ( phi_ln13_reg_422 );
    sensitive << ( icmp_ln13_fu_905_p2 );
    sensitive << ( icmp_ln14_fu_922_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const8);

    ap_CS_fsm = "0000000000000000000000000000000000000000000000000000000000000000000000001";
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "linear_regression_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_gmem_AWVALID, "(port)m_axi_gmem_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem_AWREADY, "(port)m_axi_gmem_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem_AWADDR, "(port)m_axi_gmem_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem_AWID, "(port)m_axi_gmem_AWID");
    sc_trace(mVcdFile, m_axi_gmem_AWLEN, "(port)m_axi_gmem_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem_AWSIZE, "(port)m_axi_gmem_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem_AWBURST, "(port)m_axi_gmem_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem_AWLOCK, "(port)m_axi_gmem_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem_AWCACHE, "(port)m_axi_gmem_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem_AWPROT, "(port)m_axi_gmem_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem_AWQOS, "(port)m_axi_gmem_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem_AWREGION, "(port)m_axi_gmem_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem_AWUSER, "(port)m_axi_gmem_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem_WVALID, "(port)m_axi_gmem_WVALID");
    sc_trace(mVcdFile, m_axi_gmem_WREADY, "(port)m_axi_gmem_WREADY");
    sc_trace(mVcdFile, m_axi_gmem_WDATA, "(port)m_axi_gmem_WDATA");
    sc_trace(mVcdFile, m_axi_gmem_WSTRB, "(port)m_axi_gmem_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem_WLAST, "(port)m_axi_gmem_WLAST");
    sc_trace(mVcdFile, m_axi_gmem_WID, "(port)m_axi_gmem_WID");
    sc_trace(mVcdFile, m_axi_gmem_WUSER, "(port)m_axi_gmem_WUSER");
    sc_trace(mVcdFile, m_axi_gmem_ARVALID, "(port)m_axi_gmem_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem_ARREADY, "(port)m_axi_gmem_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem_ARADDR, "(port)m_axi_gmem_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem_ARID, "(port)m_axi_gmem_ARID");
    sc_trace(mVcdFile, m_axi_gmem_ARLEN, "(port)m_axi_gmem_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem_ARSIZE, "(port)m_axi_gmem_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem_ARBURST, "(port)m_axi_gmem_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem_ARLOCK, "(port)m_axi_gmem_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem_ARCACHE, "(port)m_axi_gmem_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem_ARPROT, "(port)m_axi_gmem_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem_ARQOS, "(port)m_axi_gmem_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem_ARREGION, "(port)m_axi_gmem_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem_ARUSER, "(port)m_axi_gmem_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem_RVALID, "(port)m_axi_gmem_RVALID");
    sc_trace(mVcdFile, m_axi_gmem_RREADY, "(port)m_axi_gmem_RREADY");
    sc_trace(mVcdFile, m_axi_gmem_RDATA, "(port)m_axi_gmem_RDATA");
    sc_trace(mVcdFile, m_axi_gmem_RLAST, "(port)m_axi_gmem_RLAST");
    sc_trace(mVcdFile, m_axi_gmem_RID, "(port)m_axi_gmem_RID");
    sc_trace(mVcdFile, m_axi_gmem_RUSER, "(port)m_axi_gmem_RUSER");
    sc_trace(mVcdFile, m_axi_gmem_RRESP, "(port)m_axi_gmem_RRESP");
    sc_trace(mVcdFile, m_axi_gmem_BVALID, "(port)m_axi_gmem_BVALID");
    sc_trace(mVcdFile, m_axi_gmem_BREADY, "(port)m_axi_gmem_BREADY");
    sc_trace(mVcdFile, m_axi_gmem_BRESP, "(port)m_axi_gmem_BRESP");
    sc_trace(mVcdFile, m_axi_gmem_BID, "(port)m_axi_gmem_BID");
    sc_trace(mVcdFile, m_axi_gmem_BUSER, "(port)m_axi_gmem_BUSER");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, input_r, "input_r");
    sc_trace(mVcdFile, output_r, "output_r");
    sc_trace(mVcdFile, gmem_blk_n_AW, "gmem_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, icmp_ln32_fu_988_p2, "icmp_ln32_fu_988_p2");
    sc_trace(mVcdFile, gmem_blk_n_W, "gmem_blk_n_W");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, icmp_ln65_reg_1373, "icmp_ln65_reg_1373");
    sc_trace(mVcdFile, gmem_blk_n_B, "gmem_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state76, "ap_CS_fsm_state76");
    sc_trace(mVcdFile, gmem_blk_n_AR, "gmem_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, gmem_blk_n_R, "gmem_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln8_reg_1139, "icmp_ln8_reg_1139");
    sc_trace(mVcdFile, gmem_AWVALID, "gmem_AWVALID");
    sc_trace(mVcdFile, gmem_AWREADY, "gmem_AWREADY");
    sc_trace(mVcdFile, gmem_WVALID, "gmem_WVALID");
    sc_trace(mVcdFile, gmem_WREADY, "gmem_WREADY");
    sc_trace(mVcdFile, gmem_ARVALID, "gmem_ARVALID");
    sc_trace(mVcdFile, gmem_ARREADY, "gmem_ARREADY");
    sc_trace(mVcdFile, gmem_ARADDR, "gmem_ARADDR");
    sc_trace(mVcdFile, gmem_RVALID, "gmem_RVALID");
    sc_trace(mVcdFile, gmem_RREADY, "gmem_RREADY");
    sc_trace(mVcdFile, gmem_RDATA, "gmem_RDATA");
    sc_trace(mVcdFile, gmem_RLAST, "gmem_RLAST");
    sc_trace(mVcdFile, gmem_RID, "gmem_RID");
    sc_trace(mVcdFile, gmem_RUSER, "gmem_RUSER");
    sc_trace(mVcdFile, gmem_RRESP, "gmem_RRESP");
    sc_trace(mVcdFile, gmem_BVALID, "gmem_BVALID");
    sc_trace(mVcdFile, gmem_BREADY, "gmem_BREADY");
    sc_trace(mVcdFile, gmem_BRESP, "gmem_BRESP");
    sc_trace(mVcdFile, gmem_BID, "gmem_BID");
    sc_trace(mVcdFile, gmem_BUSER, "gmem_BUSER");
    sc_trace(mVcdFile, phi_ln8_reg_376, "phi_ln8_reg_376");
    sc_trace(mVcdFile, phi_ln8_reg_376_pp0_iter1_reg, "phi_ln8_reg_376_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter0, "ap_block_state9_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter1, "ap_block_state10_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter2, "ap_block_state11_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, phi_ln65_reg_628, "phi_ln65_reg_628");
    sc_trace(mVcdFile, data1_q1, "data1_q1");
    sc_trace(mVcdFile, reg_693, "reg_693");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, data1_q0, "data1_q0");
    sc_trace(mVcdFile, reg_699, "reg_699");
    sc_trace(mVcdFile, grp_fu_665_p2, "grp_fu_665_p2");
    sc_trace(mVcdFile, reg_706, "reg_706");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, ap_CS_fsm_state60, "ap_CS_fsm_state60");
    sc_trace(mVcdFile, ap_CS_fsm_state64, "ap_CS_fsm_state64");
    sc_trace(mVcdFile, grp_fu_669_p2, "grp_fu_669_p2");
    sc_trace(mVcdFile, reg_713, "reg_713");
    sc_trace(mVcdFile, grp_fu_677_p2, "grp_fu_677_p2");
    sc_trace(mVcdFile, reg_720, "reg_720");
    sc_trace(mVcdFile, grp_fu_683_p2, "grp_fu_683_p2");
    sc_trace(mVcdFile, reg_726, "reg_726");
    sc_trace(mVcdFile, grp_fu_639_p2, "grp_fu_639_p2");
    sc_trace(mVcdFile, reg_732, "reg_732");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, ap_CS_fsm_state56, "ap_CS_fsm_state56");
    sc_trace(mVcdFile, grp_fu_644_p2, "grp_fu_644_p2");
    sc_trace(mVcdFile, reg_738, "reg_738");
    sc_trace(mVcdFile, output3_reg_1117, "output3_reg_1117");
    sc_trace(mVcdFile, input1_reg_1122, "input1_reg_1122");
    sc_trace(mVcdFile, gmem_addr_reg_1133, "gmem_addr_reg_1133");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, icmp_ln8_fu_783_p2, "icmp_ln8_fu_783_p2");
    sc_trace(mVcdFile, icmp_ln8_reg_1139_pp0_iter1_reg, "icmp_ln8_reg_1139_pp0_iter1_reg");
    sc_trace(mVcdFile, add_ln8_fu_789_p2, "add_ln8_fu_789_p2");
    sc_trace(mVcdFile, add_ln8_reg_1143, "add_ln8_reg_1143");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, gmem_addr_1_read_reg_1148, "gmem_addr_1_read_reg_1148");
    sc_trace(mVcdFile, xor_ln11_fu_806_p2, "xor_ln11_fu_806_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, select_ln11_fu_812_p3, "select_ln11_fu_812_p3");
    sc_trace(mVcdFile, select_ln11_reg_1170, "select_ln11_reg_1170");
    sc_trace(mVcdFile, select_ln11_1_fu_820_p3, "select_ln11_1_fu_820_p3");
    sc_trace(mVcdFile, select_ln11_1_reg_1175, "select_ln11_1_reg_1175");
    sc_trace(mVcdFile, add_ln12_fu_838_p2, "add_ln12_fu_838_p2");
    sc_trace(mVcdFile, add_ln12_reg_1180, "add_ln12_reg_1180");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, xor_ln12_fu_844_p2, "xor_ln12_fu_844_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, zext_ln13_fu_869_p1, "zext_ln13_fu_869_p1");
    sc_trace(mVcdFile, zext_ln13_reg_1193, "zext_ln13_reg_1193");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, add_ln13_3_fu_873_p2, "add_ln13_3_fu_873_p2");
    sc_trace(mVcdFile, add_ln13_3_reg_1198, "add_ln13_3_reg_1198");
    sc_trace(mVcdFile, xor_ln13_fu_879_p2, "xor_ln13_fu_879_p2");
    sc_trace(mVcdFile, xor_ln13_reg_1203, "xor_ln13_reg_1203");
    sc_trace(mVcdFile, add_ln13_1_fu_885_p2, "add_ln13_1_fu_885_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, add_ln14_fu_911_p2, "add_ln14_fu_911_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, i_fu_938_p2, "i_fu_938_p2");
    sc_trace(mVcdFile, i_reg_1227, "i_reg_1227");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, zext_ln17_fu_944_p1, "zext_ln17_fu_944_p1");
    sc_trace(mVcdFile, zext_ln17_reg_1232, "zext_ln17_reg_1232");
    sc_trace(mVcdFile, icmp_ln15_fu_932_p2, "icmp_ln15_fu_932_p2");
    sc_trace(mVcdFile, zext_ln21_fu_955_p1, "zext_ln21_fu_955_p1");
    sc_trace(mVcdFile, zext_ln21_reg_1238, "zext_ln21_reg_1238");
    sc_trace(mVcdFile, ap_block_state21_io, "ap_block_state21_io");
    sc_trace(mVcdFile, i_2_fu_994_p2, "i_2_fu_994_p2");
    sc_trace(mVcdFile, i_2_reg_1257, "i_2_reg_1257");
    sc_trace(mVcdFile, i_1_fu_1006_p2, "i_1_fu_1006_p2");
    sc_trace(mVcdFile, i_1_reg_1265, "i_1_reg_1265");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, icmp_ln35_fu_1000_p2, "icmp_ln35_fu_1000_p2");
    sc_trace(mVcdFile, y_q0, "y_q0");
    sc_trace(mVcdFile, y_load_reg_1285, "y_load_reg_1285");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, i_3_fu_1039_p2, "i_3_fu_1039_p2");
    sc_trace(mVcdFile, i_3_reg_1304, "i_3_reg_1304");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, icmp_ln41_fu_1033_p2, "icmp_ln41_fu_1033_p2");
    sc_trace(mVcdFile, data_q1, "data_q1");
    sc_trace(mVcdFile, data_load_reg_1329, "data_load_reg_1329");
    sc_trace(mVcdFile, data_q0, "data_q0");
    sc_trace(mVcdFile, data_load_1_reg_1335, "data_load_1_reg_1335");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, grp_fu_651_p2, "grp_fu_651_p2");
    sc_trace(mVcdFile, grp_fu_656_p2, "grp_fu_656_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state69, "ap_CS_fsm_state69");
    sc_trace(mVcdFile, icmp_ln65_fu_1093_p2, "icmp_ln65_fu_1093_p2");
    sc_trace(mVcdFile, ap_block_state70_pp1_stage0_iter0, "ap_block_state70_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state71_pp1_stage0_iter1, "ap_block_state71_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state71_io, "ap_block_state71_io");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, add_ln65_fu_1099_p2, "add_ln65_fu_1099_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, select_ln65_fu_1109_p3, "select_ln65_fu_1109_p3");
    sc_trace(mVcdFile, select_ln65_reg_1382, "select_ln65_reg_1382");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state9, "ap_condition_pp0_exit_iter0_state9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state70, "ap_condition_pp1_exit_iter0_state70");
    sc_trace(mVcdFile, x_input_address0, "x_input_address0");
    sc_trace(mVcdFile, x_input_ce0, "x_input_ce0");
    sc_trace(mVcdFile, x_input_we0, "x_input_we0");
    sc_trace(mVcdFile, x_input_q0, "x_input_q0");
    sc_trace(mVcdFile, x_input_address1, "x_input_address1");
    sc_trace(mVcdFile, x_input_ce1, "x_input_ce1");
    sc_trace(mVcdFile, x_input_q1, "x_input_q1");
    sc_trace(mVcdFile, data_address0, "data_address0");
    sc_trace(mVcdFile, data_ce0, "data_ce0");
    sc_trace(mVcdFile, data_we0, "data_we0");
    sc_trace(mVcdFile, data_d0, "data_d0");
    sc_trace(mVcdFile, data_address1, "data_address1");
    sc_trace(mVcdFile, data_ce1, "data_ce1");
    sc_trace(mVcdFile, data_we1, "data_we1");
    sc_trace(mVcdFile, data1_address0, "data1_address0");
    sc_trace(mVcdFile, data1_ce0, "data1_ce0");
    sc_trace(mVcdFile, data1_we0, "data1_we0");
    sc_trace(mVcdFile, data1_d0, "data1_d0");
    sc_trace(mVcdFile, data1_address1, "data1_address1");
    sc_trace(mVcdFile, data1_ce1, "data1_ce1");
    sc_trace(mVcdFile, data1_we1, "data1_we1");
    sc_trace(mVcdFile, y_address0, "y_address0");
    sc_trace(mVcdFile, y_ce0, "y_ce0");
    sc_trace(mVcdFile, y_we0, "y_we0");
    sc_trace(mVcdFile, y_d0, "y_d0");
    sc_trace(mVcdFile, ap_phi_mux_phi_ln8_phi_fu_380_p4, "ap_phi_mux_phi_ln8_phi_fu_380_p4");
    sc_trace(mVcdFile, ap_phi_mux_phi_ln11_phi_fu_392_p4, "ap_phi_mux_phi_ln11_phi_fu_392_p4");
    sc_trace(mVcdFile, phi_ln11_reg_388, "phi_ln11_reg_388");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, phi_ln12_reg_399, "phi_ln12_reg_399");
    sc_trace(mVcdFile, ap_phi_mux_phi_ln12_1_phi_fu_415_p4, "ap_phi_mux_phi_ln12_1_phi_fu_415_p4");
    sc_trace(mVcdFile, icmp_ln12_fu_863_p2, "icmp_ln12_fu_863_p2");
    sc_trace(mVcdFile, phi_ln12_1_reg_411, "phi_ln12_1_reg_411");
    sc_trace(mVcdFile, phi_ln13_reg_422, "phi_ln13_reg_422");
    sc_trace(mVcdFile, icmp_ln13_fu_905_p2, "icmp_ln13_fu_905_p2");
    sc_trace(mVcdFile, phi_mul_reg_434, "phi_mul_reg_434");
    sc_trace(mVcdFile, phi_ln13_1_reg_445, "phi_ln13_1_reg_445");
    sc_trace(mVcdFile, phi_ln14_reg_456, "phi_ln14_reg_456");
    sc_trace(mVcdFile, icmp_ln14_fu_922_p2, "icmp_ln14_fu_922_p2");
    sc_trace(mVcdFile, i_0_reg_467, "i_0_reg_467");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, theta_1_2_reg_479, "theta_1_2_reg_479");
    sc_trace(mVcdFile, theta_0_2_reg_489, "theta_0_2_reg_489");
    sc_trace(mVcdFile, empty_22_reg_499, "empty_22_reg_499");
    sc_trace(mVcdFile, empty_23_reg_511, "empty_23_reg_511");
    sc_trace(mVcdFile, i2_0_reg_523, "i2_0_reg_523");
    sc_trace(mVcdFile, empty_25_reg_534, "empty_25_reg_534");
    sc_trace(mVcdFile, empty_26_reg_546, "empty_26_reg_546");
    sc_trace(mVcdFile, i3_0_reg_558, "i3_0_reg_558");
    sc_trace(mVcdFile, empty_28_reg_569, "empty_28_reg_569");
    sc_trace(mVcdFile, empty_29_reg_581, "empty_29_reg_581");
    sc_trace(mVcdFile, empty_30_reg_593, "empty_30_reg_593");
    sc_trace(mVcdFile, empty_31_reg_605, "empty_31_reg_605");
    sc_trace(mVcdFile, i4_0_reg_617, "i4_0_reg_617");
    sc_trace(mVcdFile, zext_ln8_fu_795_p1, "zext_ln8_fu_795_p1");
    sc_trace(mVcdFile, zext_ln12_fu_858_p1, "zext_ln12_fu_858_p1");
    sc_trace(mVcdFile, zext_ln13_2_fu_900_p1, "zext_ln13_2_fu_900_p1");
    sc_trace(mVcdFile, zext_ln14_fu_917_p1, "zext_ln14_fu_917_p1");
    sc_trace(mVcdFile, zext_ln17_1_fu_968_p1, "zext_ln17_1_fu_968_p1");
    sc_trace(mVcdFile, tmp_25_fu_979_p3, "tmp_25_fu_979_p3");
    sc_trace(mVcdFile, zext_ln37_fu_1012_p1, "zext_ln37_fu_1012_p1");
    sc_trace(mVcdFile, zext_ln38_fu_1028_p1, "zext_ln38_fu_1028_p1");
    sc_trace(mVcdFile, zext_ln43_1_fu_1062_p1, "zext_ln43_1_fu_1062_p1");
    sc_trace(mVcdFile, tmp_27_fu_1073_p3, "tmp_27_fu_1073_p3");
    sc_trace(mVcdFile, zext_ln43_fu_1045_p1, "zext_ln43_fu_1045_p1");
    sc_trace(mVcdFile, zext_ln45_fu_1088_p1, "zext_ln45_fu_1088_p1");
    sc_trace(mVcdFile, empty_5_fu_764_p1, "empty_5_fu_764_p1");
    sc_trace(mVcdFile, empty_fu_774_p1, "empty_fu_774_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_01001, "ap_block_pp1_stage0_01001");
    sc_trace(mVcdFile, theta_0_0_fu_162, "theta_0_0_fu_162");
    sc_trace(mVcdFile, theta_1_0_fu_166, "theta_1_0_fu_166");
    sc_trace(mVcdFile, grp_fu_639_p0, "grp_fu_639_p0");
    sc_trace(mVcdFile, grp_fu_639_p1, "grp_fu_639_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, ap_CS_fsm_state65, "ap_CS_fsm_state65");
    sc_trace(mVcdFile, grp_fu_644_p0, "grp_fu_644_p0");
    sc_trace(mVcdFile, grp_fu_644_p1, "grp_fu_644_p1");
    sc_trace(mVcdFile, grp_fu_665_p0, "grp_fu_665_p0");
    sc_trace(mVcdFile, grp_fu_665_p1, "grp_fu_665_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_CS_fsm_state57, "ap_CS_fsm_state57");
    sc_trace(mVcdFile, ap_CS_fsm_state61, "ap_CS_fsm_state61");
    sc_trace(mVcdFile, grp_fu_669_p0, "grp_fu_669_p0");
    sc_trace(mVcdFile, grp_fu_669_p1, "grp_fu_669_p1");
    sc_trace(mVcdFile, grp_fu_677_p0, "grp_fu_677_p0");
    sc_trace(mVcdFile, grp_fu_677_p1, "grp_fu_677_p1");
    sc_trace(mVcdFile, grp_fu_683_p0, "grp_fu_683_p0");
    sc_trace(mVcdFile, grp_fu_683_p1, "grp_fu_683_p1");
    sc_trace(mVcdFile, tmp_fu_850_p3, "tmp_fu_850_p3");
    sc_trace(mVcdFile, zext_ln13_1_fu_891_p1, "zext_ln13_1_fu_891_p1");
    sc_trace(mVcdFile, add_ln13_2_fu_895_p2, "add_ln13_2_fu_895_p2");
    sc_trace(mVcdFile, zext_ln15_fu_928_p1, "zext_ln15_fu_928_p1");
    sc_trace(mVcdFile, add_ln21_fu_949_p2, "add_ln21_fu_949_p2");
    sc_trace(mVcdFile, tmp_24_fu_960_p3, "tmp_24_fu_960_p3");
    sc_trace(mVcdFile, or_ln18_fu_973_p2, "or_ln18_fu_973_p2");
    sc_trace(mVcdFile, zext_ln37_1_fu_1018_p1, "zext_ln37_1_fu_1018_p1");
    sc_trace(mVcdFile, add_ln38_fu_1022_p2, "add_ln38_fu_1022_p2");
    sc_trace(mVcdFile, tmp_26_fu_1054_p3, "tmp_26_fu_1054_p3");
    sc_trace(mVcdFile, or_ln44_fu_1067_p2, "or_ln44_fu_1067_p2");
    sc_trace(mVcdFile, zext_ln43_2_fu_1050_p1, "zext_ln43_2_fu_1050_p1");
    sc_trace(mVcdFile, add_ln45_fu_1082_p2, "add_ln45_fu_1082_p2");
    sc_trace(mVcdFile, trunc_ln65_fu_1105_p1, "trunc_ln65_fu_1105_p1");
    sc_trace(mVcdFile, grp_fu_639_opcode, "grp_fu_639_opcode");
    sc_trace(mVcdFile, grp_fu_644_opcode, "grp_fu_644_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
#endif

    }
    mHdltvinHandle.open("linear_regression.hdltvin.dat");
    mHdltvoutHandle.open("linear_regression.hdltvout.dat");
}

linear_regression::~linear_regression() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete linear_regression_AXILiteS_s_axi_U;
    delete linear_regression_gmem_m_axi_U;
    delete x_input_U;
    delete data_U;
    delete data1_U;
    delete y_U;
    delete linear_regressioneOg_U1;
    delete linear_regressioneOg_U2;
    delete linear_regressionfYi_U3;
    delete linear_regressionfYi_U4;
    delete linear_regressiong8j_U5;
    delete linear_regressiong8j_U6;
    delete linear_regressiong8j_U7;
    delete linear_regressiong8j_U8;
}

void linear_regression::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void linear_regression::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_logic_0;
}

void linear_regression::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void linear_regression::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv2_0;
}

void linear_regression::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_C2;
}

void linear_regression::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv3_0;
}

void linear_regression::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv4_0;
}

void linear_regression::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_lv32_2;
}

void linear_regression::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv4_F;
}

void linear_regression::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state9.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state9.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state9.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state70.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
                    esl_seteq<1,1,1>(icmp_ln32_fu_988_p2.read(), ap_const_lv1_1) && 
                    esl_seteq<1,1,1>(ap_block_state21_io.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state70.read()))) {
            ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state70.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
                    esl_seteq<1,1,1>(icmp_ln32_fu_988_p2.read(), ap_const_lv1_1) && 
                    esl_seteq<1,1,1>(ap_block_state21_io.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln15_fu_932_p2.read()))) {
        empty_22_reg_499 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        empty_22_reg_499 = grp_fu_644_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln15_fu_932_p2.read()))) {
        empty_23_reg_511 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        empty_23_reg_511 = grp_fu_639_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
         esl_seteq<1,1,1>(ap_block_state21_io.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln32_fu_988_p2.read(), ap_const_lv1_0))) {
        empty_25_reg_534 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        empty_25_reg_534 = grp_fu_644_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
         esl_seteq<1,1,1>(ap_block_state21_io.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln32_fu_988_p2.read(), ap_const_lv1_0))) {
        empty_26_reg_546 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        empty_26_reg_546 = grp_fu_639_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln35_fu_1000_p2.read()))) {
        empty_28_reg_569 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        empty_28_reg_569 = grp_fu_656_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln35_fu_1000_p2.read()))) {
        empty_29_reg_581 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        empty_29_reg_581 = grp_fu_651_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln35_fu_1000_p2.read()))) {
        empty_30_reg_593 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        empty_30_reg_593 = grp_fu_644_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln35_fu_1000_p2.read()))) {
        empty_31_reg_605 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        empty_31_reg_605 = grp_fu_639_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln15_fu_932_p2.read()))) {
        i2_0_reg_523 = ap_const_lv11_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        i2_0_reg_523 = i_2_reg_1257.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
         esl_seteq<1,1,1>(ap_block_state21_io.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln32_fu_988_p2.read(), ap_const_lv1_0))) {
        i3_0_reg_558 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        i3_0_reg_558 = i_1_reg_1265.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln35_fu_1000_p2.read()))) {
        i4_0_reg_617 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        i4_0_reg_617 = i_3_reg_1304.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln14_fu_922_p2.read()))) {
        i_0_reg_467 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        i_0_reg_467 = i_reg_1227.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        phi_ln11_reg_388 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_phi_mux_phi_ln11_phi_fu_392_p4.read()))) {
        phi_ln11_reg_388 = xor_ln11_fu_806_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_phi_mux_phi_ln12_1_phi_fu_415_p4.read()))) {
        phi_ln12_1_reg_411 = xor_ln12_fu_844_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        phi_ln12_1_reg_411 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_phi_ln11_phi_fu_392_p4.read()))) {
        phi_ln12_reg_399 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_phi_ln12_1_phi_fu_415_p4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_863_p2.read()))) {
        phi_ln12_reg_399 = add_ln12_reg_1180.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_fu_905_p2.read()))) {
        phi_ln13_1_reg_445 = add_ln13_1_fu_885_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        phi_ln13_1_reg_445 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_phi_ln12_1_phi_fu_415_p4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln12_fu_863_p2.read()))) {
        phi_ln13_reg_422 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln13_fu_905_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, phi_ln13_reg_422.read()))) {
        phi_ln13_reg_422 = xor_ln13_reg_1203.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln13_fu_905_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, phi_ln13_reg_422.read()))) {
        phi_ln14_reg_456 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_922_p2.read()))) {
        phi_ln14_reg_456 = add_ln14_fu_911_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
         esl_seteq<1,1,1>(icmp_ln32_fu_988_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_state21_io.read(), ap_const_boolean_0))) {
        phi_ln65_reg_628 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln65_fu_1093_p2.read()))) {
        phi_ln65_reg_628 = add_ln65_fu_1099_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln8_reg_1139.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        phi_ln8_reg_376 = add_ln8_reg_1143.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        phi_ln8_reg_376 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_phi_ln12_1_phi_fu_415_p4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln12_fu_863_p2.read()))) {
        phi_mul_reg_434 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln13_fu_905_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, phi_ln13_reg_422.read()))) {
        phi_mul_reg_434 = add_ln13_3_reg_1198.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln15_fu_932_p2.read()))) {
        theta_0_2_reg_489 = select_ln11_1_reg_1175.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        theta_0_2_reg_489 = grp_fu_639_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln15_fu_932_p2.read()))) {
        theta_1_2_reg_479 = select_ln11_reg_1170.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        theta_1_2_reg_479 = grp_fu_644_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        add_ln12_reg_1180 = add_ln12_fu_838_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        add_ln13_3_reg_1198 = add_ln13_3_fu_873_p2.read();
        xor_ln13_reg_1203 = xor_ln13_fu_879_p2.read();
        zext_ln13_reg_1193 = zext_ln13_fu_869_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        add_ln8_reg_1143 = add_ln8_fu_789_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        data_load_1_reg_1335 = data_q0.read();
        data_load_reg_1329 = data_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln8_reg_1139.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        gmem_addr_1_read_reg_1148 = gmem_RDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        gmem_addr_reg_1133 =  (sc_lv<32>) (empty_fu_774_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        i_1_reg_1265 = i_1_fu_1006_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(ap_block_state21_io.read(), ap_const_boolean_0))) {
        i_2_reg_1257 = i_2_fu_994_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        i_3_reg_1304 = i_3_fu_1039_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        i_reg_1227 = i_fu_938_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln65_reg_1373 = icmp_ln65_fu_1093_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln8_reg_1139 = icmp_ln8_fu_783_p2.read();
        icmp_ln8_reg_1139_pp0_iter1_reg = icmp_ln8_reg_1139.read();
        phi_ln8_reg_376_pp0_iter1_reg = phi_ln8_reg_376.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        input1_reg_1122 = input_r.read().range(31, 2);
        output3_reg_1117 = output_r.read().range(31, 2);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        reg_693 = data1_q1.read();
        reg_699 = data1_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()))) {
        reg_706 = grp_fu_665_p2.read();
        reg_713 = grp_fu_669_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()))) {
        reg_720 = grp_fu_677_p2.read();
        reg_726 = grp_fu_683_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()))) {
        reg_732 = grp_fu_639_p2.read();
        reg_738 = grp_fu_644_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        select_ln11_1_reg_1175 = select_ln11_1_fu_820_p3.read();
        select_ln11_reg_1170 = select_ln11_fu_812_p3.read();
        theta_0_0_fu_162 = select_ln11_1_fu_820_p3.read();
        theta_1_0_fu_166 = select_ln11_fu_812_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln65_fu_1093_p2.read()))) {
        select_ln65_reg_1382 = select_ln65_fu_1109_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        y_load_reg_1285 = y_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_fu_932_p2.read()))) {
        zext_ln17_reg_1232 = zext_ln17_fu_944_p1.read();
        zext_ln21_reg_1238 = zext_ln21_fu_955_p1.read();
    }
}

void linear_regression::thread_add_ln12_fu_838_p2() {
    add_ln12_fu_838_p2 = (!phi_ln12_reg_399.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(phi_ln12_reg_399.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void linear_regression::thread_add_ln13_1_fu_885_p2() {
    add_ln13_1_fu_885_p2 = (!phi_ln13_1_reg_445.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(phi_ln13_1_reg_445.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void linear_regression::thread_add_ln13_2_fu_895_p2() {
    add_ln13_2_fu_895_p2 = (!zext_ln13_reg_1193.read().is_01() || !zext_ln13_1_fu_891_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln13_reg_1193.read()) + sc_biguint<8>(zext_ln13_1_fu_891_p1.read()));
}

void linear_regression::thread_add_ln13_3_fu_873_p2() {
    add_ln13_3_fu_873_p2 = (!phi_mul_reg_434.read().is_01() || !ap_const_lv7_61.is_01())? sc_lv<7>(): (sc_biguint<7>(phi_mul_reg_434.read()) + sc_bigint<7>(ap_const_lv7_61));
}

void linear_regression::thread_add_ln14_fu_911_p2() {
    add_ln14_fu_911_p2 = (!phi_ln14_reg_456.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(phi_ln14_reg_456.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void linear_regression::thread_add_ln21_fu_949_p2() {
    add_ln21_fu_949_p2 = (!zext_ln15_fu_928_p1.read().is_01() || !ap_const_lv8_61.is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln15_fu_928_p1.read()) + sc_biguint<8>(ap_const_lv8_61));
}

void linear_regression::thread_add_ln38_fu_1022_p2() {
    add_ln38_fu_1022_p2 = (!zext_ln37_1_fu_1018_p1.read().is_01() || !ap_const_lv8_61.is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln37_1_fu_1018_p1.read()) + sc_biguint<8>(ap_const_lv8_61));
}

void linear_regression::thread_add_ln45_fu_1082_p2() {
    add_ln45_fu_1082_p2 = (!zext_ln43_2_fu_1050_p1.read().is_01() || !ap_const_lv8_61.is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln43_2_fu_1050_p1.read()) + sc_biguint<8>(ap_const_lv8_61));
}

void linear_regression::thread_add_ln65_fu_1099_p2() {
    add_ln65_fu_1099_p2 = (!phi_ln65_reg_628.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(phi_ln65_reg_628.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void linear_regression::thread_add_ln8_fu_789_p2() {
    add_ln8_fu_789_p2 = (!ap_phi_mux_phi_ln8_phi_fu_380_p4.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(ap_phi_mux_phi_ln8_phi_fu_380_p4.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void linear_regression::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[8];
}

void linear_regression::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[67];
}

void linear_regression::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void linear_regression::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[9];
}

void linear_regression::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[10];
}

void linear_regression::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[11];
}

void linear_regression::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[12];
}

void linear_regression::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[13];
}

void linear_regression::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[14];
}

void linear_regression::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[15];
}

void linear_regression::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[16];
}

void linear_regression::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void linear_regression::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[17];
}

void linear_regression::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[18];
}

void linear_regression::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[19];
}

void linear_regression::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[20];
}

void linear_regression::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[21];
}

void linear_regression::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[24];
}

void linear_regression::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[25];
}

void linear_regression::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[29];
}

void linear_regression::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[30];
}

void linear_regression::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[31];
}

void linear_regression::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[32];
}

void linear_regression::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[35];
}

void linear_regression::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[36];
}

void linear_regression::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[40];
}

void linear_regression::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[43];
}

void linear_regression::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[44];
}

void linear_regression::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[48];
}

void linear_regression::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read()[49];
}

void linear_regression::thread_ap_CS_fsm_state56() {
    ap_CS_fsm_state56 = ap_CS_fsm.read()[53];
}

void linear_regression::thread_ap_CS_fsm_state57() {
    ap_CS_fsm_state57 = ap_CS_fsm.read()[54];
}

void linear_regression::thread_ap_CS_fsm_state60() {
    ap_CS_fsm_state60 = ap_CS_fsm.read()[57];
}

void linear_regression::thread_ap_CS_fsm_state61() {
    ap_CS_fsm_state61 = ap_CS_fsm.read()[58];
}

void linear_regression::thread_ap_CS_fsm_state64() {
    ap_CS_fsm_state64 = ap_CS_fsm.read()[61];
}

void linear_regression::thread_ap_CS_fsm_state65() {
    ap_CS_fsm_state65 = ap_CS_fsm.read()[62];
}

void linear_regression::thread_ap_CS_fsm_state69() {
    ap_CS_fsm_state69 = ap_CS_fsm.read()[66];
}

void linear_regression::thread_ap_CS_fsm_state76() {
    ap_CS_fsm_state76 = ap_CS_fsm.read()[72];
}

void linear_regression::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void linear_regression::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void linear_regression::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln8_reg_1139.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read()));
}

void linear_regression::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln8_reg_1139.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read()));
}

void linear_regression::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void linear_regression::thread_ap_block_pp1_stage0_01001() {
    ap_block_pp1_stage0_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void linear_regression::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state71_io.read()));
}

void linear_regression::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state71_io.read()));
}

void linear_regression::thread_ap_block_state10_pp0_stage0_iter1() {
    ap_block_state10_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln8_reg_1139.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read()));
}

void linear_regression::thread_ap_block_state11_pp0_stage0_iter2() {
    ap_block_state11_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void linear_regression::thread_ap_block_state21_io() {
    ap_block_state21_io = (esl_seteq<1,1,1>(icmp_ln32_fu_988_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_AWREADY.read()));
}

void linear_regression::thread_ap_block_state70_pp1_stage0_iter0() {
    ap_block_state70_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void linear_regression::thread_ap_block_state71_io() {
    ap_block_state71_io = (esl_seteq<1,1,1>(icmp_ln65_reg_1373.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_WREADY.read()));
}

void linear_regression::thread_ap_block_state71_pp1_stage0_iter1() {
    ap_block_state71_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void linear_regression::thread_ap_block_state9_pp0_stage0_iter0() {
    ap_block_state9_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void linear_regression::thread_ap_condition_pp0_exit_iter0_state9() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln8_fu_783_p2.read())) {
        ap_condition_pp0_exit_iter0_state9 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state9 = ap_const_logic_0;
    }
}

void linear_regression::thread_ap_condition_pp1_exit_iter0_state70() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln65_fu_1093_p2.read())) {
        ap_condition_pp1_exit_iter0_state70 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state70 = ap_const_logic_0;
    }
}

void linear_regression::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) && 
         esl_seteq<1,1,1>(gmem_BVALID.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void linear_regression::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void linear_regression::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void linear_regression::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void linear_regression::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void linear_regression::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void linear_regression::thread_ap_phi_mux_phi_ln11_phi_fu_392_p4() {
    ap_phi_mux_phi_ln11_phi_fu_392_p4 = phi_ln11_reg_388.read();
}

void linear_regression::thread_ap_phi_mux_phi_ln12_1_phi_fu_415_p4() {
    ap_phi_mux_phi_ln12_1_phi_fu_415_p4 = phi_ln12_1_reg_411.read();
}

void linear_regression::thread_ap_phi_mux_phi_ln8_phi_fu_380_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln8_reg_1139.read()))) {
        ap_phi_mux_phi_ln8_phi_fu_380_p4 = add_ln8_reg_1143.read();
    } else {
        ap_phi_mux_phi_ln8_phi_fu_380_p4 = phi_ln8_reg_376.read();
    }
}

void linear_regression::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) && 
         esl_seteq<1,1,1>(gmem_BVALID.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void linear_regression::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void linear_regression::thread_data1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        data1_address0 =  (sc_lv<8>) (zext_ln45_fu_1088_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        data1_address0 =  (sc_lv<8>) (zext_ln38_fu_1028_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        data1_address0 =  (sc_lv<8>) (zext_ln17_reg_1232.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        data1_address0 =  (sc_lv<8>) (zext_ln13_2_fu_900_p1.read());
    } else {
        data1_address0 = "XXXXXXXX";
    }
}

void linear_regression::thread_data1_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        data1_address1 =  (sc_lv<8>) (zext_ln43_fu_1045_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        data1_address1 =  (sc_lv<8>) (zext_ln37_fu_1012_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        data1_address1 =  (sc_lv<8>) (zext_ln21_reg_1238.read());
    } else {
        data1_address1 = "XXXXXXXX";
    }
}

void linear_regression::thread_data1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        data1_ce0 = ap_const_logic_1;
    } else {
        data1_ce0 = ap_const_logic_0;
    }
}

void linear_regression::thread_data1_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        data1_ce1 = ap_const_logic_1;
    } else {
        data1_ce1 = ap_const_logic_0;
    }
}

void linear_regression::thread_data1_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        data1_d0 = ap_const_lv32_3F800000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        data1_d0 = ap_const_lv32_0;
    } else {
        data1_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void linear_regression::thread_data1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        data1_we0 = ap_const_logic_1;
    } else {
        data1_we0 = ap_const_logic_0;
    }
}

void linear_regression::thread_data1_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        data1_we1 = ap_const_logic_1;
    } else {
        data1_we1 = ap_const_logic_0;
    }
}

void linear_regression::thread_data_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        data_address0 =  (sc_lv<8>) (tmp_27_fu_1073_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        data_address0 =  (sc_lv<8>) (zext_ln17_1_fu_968_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        data_address0 =  (sc_lv<8>) (zext_ln12_fu_858_p1.read());
    } else {
        data_address0 = "XXXXXXXX";
    }
}

void linear_regression::thread_data_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        data_address1 =  (sc_lv<8>) (zext_ln43_1_fu_1062_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        data_address1 =  (sc_lv<8>) (tmp_25_fu_979_p3.read());
    } else {
        data_address1 = "XXXXXXXX";
    }
}

void linear_regression::thread_data_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        data_ce0 = ap_const_logic_1;
    } else {
        data_ce0 = ap_const_logic_0;
    }
}

void linear_regression::thread_data_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        data_ce1 = ap_const_logic_1;
    } else {
        data_ce1 = ap_const_logic_0;
    }
}

void linear_regression::thread_data_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        data_d0 = ap_const_lv32_3F800000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        data_d0 = ap_const_lv32_0;
    } else {
        data_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void linear_regression::thread_data_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        data_we0 = ap_const_logic_1;
    } else {
        data_we0 = ap_const_logic_0;
    }
}

void linear_regression::thread_data_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        data_we1 = ap_const_logic_1;
    } else {
        data_we1 = ap_const_logic_0;
    }
}

void linear_regression::thread_empty_5_fu_764_p1() {
    empty_5_fu_764_p1 = esl_zext<64,30>(input1_reg_1122.read());
}

void linear_regression::thread_empty_fu_774_p1() {
    empty_fu_774_p1 = esl_zext<64,30>(output3_reg_1117.read());
}

void linear_regression::thread_gmem_ARADDR() {
    gmem_ARADDR =  (sc_lv<32>) (empty_5_fu_764_p1.read());
}

void linear_regression::thread_gmem_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(gmem_ARREADY.read(), ap_const_logic_1))) {
        gmem_ARVALID = ap_const_logic_1;
    } else {
        gmem_ARVALID = ap_const_logic_0;
    }
}

void linear_regression::thread_gmem_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
         esl_seteq<1,1,1>(icmp_ln32_fu_988_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_state21_io.read(), ap_const_boolean_0))) {
        gmem_AWVALID = ap_const_logic_1;
    } else {
        gmem_AWVALID = ap_const_logic_0;
    }
}

void linear_regression::thread_gmem_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) && 
         esl_seteq<1,1,1>(gmem_BVALID.read(), ap_const_logic_1))) {
        gmem_BREADY = ap_const_logic_1;
    } else {
        gmem_BREADY = ap_const_logic_0;
    }
}

void linear_regression::thread_gmem_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln8_reg_1139.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        gmem_RREADY = ap_const_logic_1;
    } else {
        gmem_RREADY = ap_const_logic_0;
    }
}

void linear_regression::thread_gmem_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln65_reg_1373.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        gmem_WVALID = ap_const_logic_1;
    } else {
        gmem_WVALID = ap_const_logic_0;
    }
}

void linear_regression::thread_gmem_blk_n_AR() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        gmem_blk_n_AR = m_axi_gmem_ARREADY.read();
    } else {
        gmem_blk_n_AR = ap_const_logic_1;
    }
}

void linear_regression::thread_gmem_blk_n_AW() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
         esl_seteq<1,1,1>(icmp_ln32_fu_988_p2.read(), ap_const_lv1_1))) {
        gmem_blk_n_AW = m_axi_gmem_AWREADY.read();
    } else {
        gmem_blk_n_AW = ap_const_logic_1;
    }
}

void linear_regression::thread_gmem_blk_n_B() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read())) {
        gmem_blk_n_B = m_axi_gmem_BVALID.read();
    } else {
        gmem_blk_n_B = ap_const_logic_1;
    }
}

void linear_regression::thread_gmem_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln8_reg_1139.read()))) {
        gmem_blk_n_R = m_axi_gmem_RVALID.read();
    } else {
        gmem_blk_n_R = ap_const_logic_1;
    }
}

void linear_regression::thread_gmem_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln65_reg_1373.read(), ap_const_lv1_0))) {
        gmem_blk_n_W = m_axi_gmem_WREADY.read();
    } else {
        gmem_blk_n_W = ap_const_logic_1;
    }
}

void linear_regression::thread_grp_fu_639_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()))) {
        grp_fu_639_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
        grp_fu_639_opcode = ap_const_lv2_0;
    } else {
        grp_fu_639_opcode =  (sc_lv<2>) ("XX");
    }
}

void linear_regression::thread_grp_fu_639_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read())) {
        grp_fu_639_p0 = empty_23_reg_511.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read())) {
        grp_fu_639_p0 = reg_732.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        grp_fu_639_p0 = reg_706.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        grp_fu_639_p0 = empty_31_reg_605.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        grp_fu_639_p0 = empty_26_reg_546.read();
    } else {
        grp_fu_639_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void linear_regression::thread_grp_fu_639_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read())) {
        grp_fu_639_p1 = empty_26_reg_546.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        grp_fu_639_p1 = reg_713.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()))) {
        grp_fu_639_p1 = reg_706.read();
    } else {
        grp_fu_639_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void linear_regression::thread_grp_fu_644_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()))) {
        grp_fu_644_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
        grp_fu_644_opcode = ap_const_lv2_0;
    } else {
        grp_fu_644_opcode =  (sc_lv<2>) ("XX");
    }
}

void linear_regression::thread_grp_fu_644_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read())) {
        grp_fu_644_p0 = empty_22_reg_499.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read())) {
        grp_fu_644_p0 = reg_738.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        grp_fu_644_p0 = reg_720.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        grp_fu_644_p0 = empty_30_reg_593.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        grp_fu_644_p0 = empty_25_reg_534.read();
    } else {
        grp_fu_644_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void linear_regression::thread_grp_fu_644_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read())) {
        grp_fu_644_p1 = empty_25_reg_534.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        grp_fu_644_p1 = reg_726.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()))) {
        grp_fu_644_p1 = reg_713.read();
    } else {
        grp_fu_644_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void linear_regression::thread_grp_fu_665_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        grp_fu_665_p0 = reg_706.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read())) {
        grp_fu_665_p0 = reg_732.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        grp_fu_665_p0 = empty_31_reg_605.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()))) {
        grp_fu_665_p0 = reg_693.read();
    } else {
        grp_fu_665_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void linear_regression::thread_grp_fu_665_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        grp_fu_665_p1 = ap_const_lv32_3C23D70A;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read())) {
        grp_fu_665_p1 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        grp_fu_665_p1 = data_load_reg_1329.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        grp_fu_665_p1 = empty_23_reg_511.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        grp_fu_665_p1 = y_load_reg_1285.read();
    } else {
        grp_fu_665_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void linear_regression::thread_grp_fu_669_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        grp_fu_669_p0 = reg_713.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read())) {
        grp_fu_669_p0 = reg_738.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        grp_fu_669_p0 = reg_693.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        grp_fu_669_p0 = empty_30_reg_593.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        grp_fu_669_p0 = reg_699.read();
    } else {
        grp_fu_669_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void linear_regression::thread_grp_fu_669_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        grp_fu_669_p1 = ap_const_lv32_3C23D70A;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read())) {
        grp_fu_669_p1 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        grp_fu_669_p1 = data_load_1_reg_1335.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        grp_fu_669_p1 = empty_22_reg_499.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        grp_fu_669_p1 = y_load_reg_1285.read();
    } else {
        grp_fu_669_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void linear_regression::thread_grp_fu_677_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        grp_fu_677_p0 = reg_699.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        grp_fu_677_p0 = empty_29_reg_581.read();
    } else {
        grp_fu_677_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void linear_regression::thread_grp_fu_677_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        grp_fu_677_p1 = data_load_reg_1329.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        grp_fu_677_p1 = empty_23_reg_511.read();
    } else {
        grp_fu_677_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void linear_regression::thread_grp_fu_683_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        grp_fu_683_p0 = reg_699.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        grp_fu_683_p0 = empty_28_reg_569.read();
    } else {
        grp_fu_683_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void linear_regression::thread_grp_fu_683_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        grp_fu_683_p1 = data_load_1_reg_1335.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        grp_fu_683_p1 = empty_22_reg_499.read();
    } else {
        grp_fu_683_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void linear_regression::thread_i_1_fu_1006_p2() {
    i_1_fu_1006_p2 = (!i3_0_reg_558.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i3_0_reg_558.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void linear_regression::thread_i_2_fu_994_p2() {
    i_2_fu_994_p2 = (!i2_0_reg_523.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(i2_0_reg_523.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void linear_regression::thread_i_3_fu_1039_p2() {
    i_3_fu_1039_p2 = (!i4_0_reg_617.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i4_0_reg_617.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void linear_regression::thread_i_fu_938_p2() {
    i_fu_938_p2 = (!i_0_reg_467.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_0_reg_467.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void linear_regression::thread_icmp_ln12_fu_863_p2() {
    icmp_ln12_fu_863_p2 = (!phi_ln12_reg_399.read().is_01() || !ap_const_lv7_60.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln12_reg_399.read() == ap_const_lv7_60);
}

void linear_regression::thread_icmp_ln13_fu_905_p2() {
    icmp_ln13_fu_905_p2 = (!phi_ln13_1_reg_445.read().is_01() || !ap_const_lv7_60.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln13_1_reg_445.read() == ap_const_lv7_60);
}

void linear_regression::thread_icmp_ln14_fu_922_p2() {
    icmp_ln14_fu_922_p2 = (!phi_ln14_reg_456.read().is_01() || !ap_const_lv7_60.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln14_reg_456.read() == ap_const_lv7_60);
}

void linear_regression::thread_icmp_ln15_fu_932_p2() {
    icmp_ln15_fu_932_p2 = (!i_0_reg_467.read().is_01() || !ap_const_lv7_61.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_467.read() == ap_const_lv7_61);
}

void linear_regression::thread_icmp_ln32_fu_988_p2() {
    icmp_ln32_fu_988_p2 = (!i2_0_reg_523.read().is_01() || !ap_const_lv11_5DC.is_01())? sc_lv<1>(): sc_lv<1>(i2_0_reg_523.read() == ap_const_lv11_5DC);
}

void linear_regression::thread_icmp_ln35_fu_1000_p2() {
    icmp_ln35_fu_1000_p2 = (!i3_0_reg_558.read().is_01() || !ap_const_lv7_61.is_01())? sc_lv<1>(): sc_lv<1>(i3_0_reg_558.read() == ap_const_lv7_61);
}

void linear_regression::thread_icmp_ln41_fu_1033_p2() {
    icmp_ln41_fu_1033_p2 = (!i4_0_reg_617.read().is_01() || !ap_const_lv7_61.is_01())? sc_lv<1>(): sc_lv<1>(i4_0_reg_617.read() == ap_const_lv7_61);
}

void linear_regression::thread_icmp_ln65_fu_1093_p2() {
    icmp_ln65_fu_1093_p2 = (!phi_ln65_reg_628.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln65_reg_628.read() == ap_const_lv2_2);
}

void linear_regression::thread_icmp_ln8_fu_783_p2() {
    icmp_ln8_fu_783_p2 = (!ap_phi_mux_phi_ln8_phi_fu_380_p4.read().is_01() || !ap_const_lv8_C2.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_phi_ln8_phi_fu_380_p4.read() == ap_const_lv8_C2);
}

void linear_regression::thread_or_ln18_fu_973_p2() {
    or_ln18_fu_973_p2 = (tmp_24_fu_960_p3.read() | ap_const_lv8_1);
}

void linear_regression::thread_or_ln44_fu_1067_p2() {
    or_ln44_fu_1067_p2 = (tmp_26_fu_1054_p3.read() | ap_const_lv8_1);
}

void linear_regression::thread_select_ln11_1_fu_820_p3() {
    select_ln11_1_fu_820_p3 = (!phi_ln11_reg_388.read()[0].is_01())? sc_lv<32>(): ((phi_ln11_reg_388.read()[0].to_bool())? theta_0_0_fu_162.read(): ap_const_lv32_0);
}

void linear_regression::thread_select_ln11_fu_812_p3() {
    select_ln11_fu_812_p3 = (!phi_ln11_reg_388.read()[0].is_01())? sc_lv<32>(): ((phi_ln11_reg_388.read()[0].to_bool())? ap_const_lv32_0: theta_1_0_fu_166.read());
}

void linear_regression::thread_select_ln65_fu_1109_p3() {
    select_ln65_fu_1109_p3 = (!trunc_ln65_fu_1105_p1.read()[0].is_01())? sc_lv<32>(): ((trunc_ln65_fu_1105_p1.read()[0].to_bool())? theta_1_2_reg_479.read(): theta_0_2_reg_489.read());
}

void linear_regression::thread_tmp_24_fu_960_p3() {
    tmp_24_fu_960_p3 = esl_concat<7,1>(i_0_reg_467.read(), ap_const_lv1_0);
}

void linear_regression::thread_tmp_25_fu_979_p3() {
    tmp_25_fu_979_p3 = esl_concat<56,8>(ap_const_lv56_0, or_ln18_fu_973_p2.read());
}

void linear_regression::thread_tmp_26_fu_1054_p3() {
    tmp_26_fu_1054_p3 = esl_concat<7,1>(i4_0_reg_617.read(), ap_const_lv1_0);
}

void linear_regression::thread_tmp_27_fu_1073_p3() {
    tmp_27_fu_1073_p3 = esl_concat<56,8>(ap_const_lv56_0, or_ln44_fu_1067_p2.read());
}

void linear_regression::thread_tmp_fu_850_p3() {
    tmp_fu_850_p3 = esl_concat<7,1>(phi_ln12_reg_399.read(), phi_ln12_1_reg_411.read());
}

void linear_regression::thread_trunc_ln65_fu_1105_p1() {
    trunc_ln65_fu_1105_p1 = phi_ln65_reg_628.read().range(1-1, 0);
}

void linear_regression::thread_x_input_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        x_input_address0 =  (sc_lv<8>) (zext_ln17_fu_944_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        x_input_address0 =  (sc_lv<8>) (zext_ln8_fu_795_p1.read());
    } else {
        x_input_address0 = "XXXXXXXX";
    }
}

void linear_regression::thread_x_input_address1() {
    x_input_address1 =  (sc_lv<8>) (zext_ln21_fu_955_p1.read());
}

void linear_regression::thread_x_input_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())))) {
        x_input_ce0 = ap_const_logic_1;
    } else {
        x_input_ce0 = ap_const_logic_0;
    }
}

void linear_regression::thread_x_input_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        x_input_ce1 = ap_const_logic_1;
    } else {
        x_input_ce1 = ap_const_logic_0;
    }
}

void linear_regression::thread_x_input_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln8_reg_1139_pp0_iter1_reg.read()))) {
        x_input_we0 = ap_const_logic_1;
    } else {
        x_input_we0 = ap_const_logic_0;
    }
}

void linear_regression::thread_xor_ln11_fu_806_p2() {
    xor_ln11_fu_806_p2 = (phi_ln11_reg_388.read() ^ ap_const_lv1_1);
}

void linear_regression::thread_xor_ln12_fu_844_p2() {
    xor_ln12_fu_844_p2 = (phi_ln12_1_reg_411.read() ^ ap_const_lv1_1);
}

void linear_regression::thread_xor_ln13_fu_879_p2() {
    xor_ln13_fu_879_p2 = (phi_ln13_reg_422.read() ^ ap_const_lv1_1);
}

void linear_regression::thread_y_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        y_address0 =  (sc_lv<7>) (zext_ln37_fu_1012_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        y_address0 =  (sc_lv<7>) (zext_ln17_reg_1232.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        y_address0 =  (sc_lv<7>) (zext_ln14_fu_917_p1.read());
    } else {
        y_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void linear_regression::thread_y_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        y_ce0 = ap_const_logic_1;
    } else {
        y_ce0 = ap_const_logic_0;
    }
}

void linear_regression::thread_y_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        y_d0 = x_input_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        y_d0 = ap_const_lv32_0;
    } else {
        y_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void linear_regression::thread_y_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        y_we0 = ap_const_logic_1;
    } else {
        y_we0 = ap_const_logic_0;
    }
}

void linear_regression::thread_zext_ln12_fu_858_p1() {
    zext_ln12_fu_858_p1 = esl_zext<64,8>(tmp_fu_850_p3.read());
}

void linear_regression::thread_zext_ln13_1_fu_891_p1() {
    zext_ln13_1_fu_891_p1 = esl_zext<8,7>(phi_ln13_1_reg_445.read());
}

void linear_regression::thread_zext_ln13_2_fu_900_p1() {
    zext_ln13_2_fu_900_p1 = esl_zext<64,8>(add_ln13_2_fu_895_p2.read());
}

void linear_regression::thread_zext_ln13_fu_869_p1() {
    zext_ln13_fu_869_p1 = esl_zext<8,7>(phi_mul_reg_434.read());
}

void linear_regression::thread_zext_ln14_fu_917_p1() {
    zext_ln14_fu_917_p1 = esl_zext<64,7>(phi_ln14_reg_456.read());
}

void linear_regression::thread_zext_ln15_fu_928_p1() {
    zext_ln15_fu_928_p1 = esl_zext<8,7>(i_0_reg_467.read());
}

void linear_regression::thread_zext_ln17_1_fu_968_p1() {
    zext_ln17_1_fu_968_p1 = esl_zext<64,8>(tmp_24_fu_960_p3.read());
}

void linear_regression::thread_zext_ln17_fu_944_p1() {
    zext_ln17_fu_944_p1 = esl_zext<64,7>(i_0_reg_467.read());
}

void linear_regression::thread_zext_ln21_fu_955_p1() {
    zext_ln21_fu_955_p1 = esl_zext<64,8>(add_ln21_fu_949_p2.read());
}

void linear_regression::thread_zext_ln37_1_fu_1018_p1() {
    zext_ln37_1_fu_1018_p1 = esl_zext<8,7>(i3_0_reg_558.read());
}

void linear_regression::thread_zext_ln37_fu_1012_p1() {
    zext_ln37_fu_1012_p1 = esl_zext<64,7>(i3_0_reg_558.read());
}

void linear_regression::thread_zext_ln38_fu_1028_p1() {
    zext_ln38_fu_1028_p1 = esl_zext<64,8>(add_ln38_fu_1022_p2.read());
}

void linear_regression::thread_zext_ln43_1_fu_1062_p1() {
    zext_ln43_1_fu_1062_p1 = esl_zext<64,8>(tmp_26_fu_1054_p3.read());
}

void linear_regression::thread_zext_ln43_2_fu_1050_p1() {
    zext_ln43_2_fu_1050_p1 = esl_zext<8,7>(i4_0_reg_617.read());
}

void linear_regression::thread_zext_ln43_fu_1045_p1() {
    zext_ln43_fu_1045_p1 = esl_zext<64,7>(i4_0_reg_617.read());
}

void linear_regression::thread_zext_ln45_fu_1088_p1() {
    zext_ln45_fu_1088_p1 = esl_zext<64,8>(add_ln45_fu_1082_p2.read());
}

void linear_regression::thread_zext_ln8_fu_795_p1() {
    zext_ln8_fu_795_p1 = esl_zext<64,8>(phi_ln8_reg_376_pp0_iter1_reg.read());
}

void linear_regression::thread_ap_NS_fsm() {
    if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(gmem_ARREADY.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state3;
        } else {
            ap_NS_fsm = ap_ST_fsm_state2;
        }
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        ap_NS_fsm = ap_ST_fsm_state4;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        ap_NS_fsm = ap_ST_fsm_state6;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage0;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage0))
    {
        if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln8_fu_783_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln8_fu_783_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_state12;
        } else {
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        }
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        ap_NS_fsm = ap_ST_fsm_state13;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_phi_ln11_phi_fu_392_p4.read()))) {
            ap_NS_fsm = ap_ST_fsm_state14;
        } else {
            ap_NS_fsm = ap_ST_fsm_state13;
        }
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_phi_ln12_1_phi_fu_415_p4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln12_fu_863_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state16;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_phi_ln12_1_phi_fu_415_p4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_863_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state14;
        } else {
            ap_NS_fsm = ap_ST_fsm_state15;
        }
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln13_fu_905_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, phi_ln13_reg_422.read()))) {
            ap_NS_fsm = ap_ST_fsm_state18;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln13_fu_905_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, phi_ln13_reg_422.read()))) {
            ap_NS_fsm = ap_ST_fsm_state16;
        } else {
            ap_NS_fsm = ap_ST_fsm_state17;
        }
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln14_fu_922_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state19;
        } else {
            ap_NS_fsm = ap_ST_fsm_state18;
        }
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln15_fu_932_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state21;
        } else {
            ap_NS_fsm = ap_ST_fsm_state20;
        }
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(icmp_ln32_fu_988_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_state21_io.read(), ap_const_boolean_0))) {
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(ap_block_state21_io.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln32_fu_988_p2.read(), ap_const_lv1_0))) {
            ap_NS_fsm = ap_ST_fsm_state22;
        } else {
            ap_NS_fsm = ap_ST_fsm_state21;
        }
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln35_fu_1000_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state33;
        } else {
            ap_NS_fsm = ap_ST_fsm_state23;
        }
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln41_fu_1033_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state44;
        } else {
            ap_NS_fsm = ap_ST_fsm_state34;
        }
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state48;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        ap_NS_fsm = ap_ST_fsm_state50;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state52;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        ap_NS_fsm = ap_ST_fsm_state54;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state65;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state69;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_pp1_stage0))
    {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln65_fu_1093_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln65_fu_1093_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state72;
        } else {
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        }
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        ap_NS_fsm = ap_ST_fsm_state73;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state73))
    {
        ap_NS_fsm = ap_ST_fsm_state74;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state74))
    {
        ap_NS_fsm = ap_ST_fsm_state75;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state75))
    {
        ap_NS_fsm = ap_ST_fsm_state76;
    }
    else if (esl_seteq<1,73,73>(ap_CS_fsm.read(), ap_ST_fsm_state76))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) && esl_seteq<1,1,1>(gmem_BVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state1;
        } else {
            ap_NS_fsm = ap_ST_fsm_state76;
        }
    }
    else
    {
        ap_NS_fsm =  (sc_lv<73>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
void linear_regression::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_gmem_AWVALID\" :  \"" << m_axi_gmem_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_AWREADY\" :  \"" << m_axi_gmem_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWADDR\" :  \"" << m_axi_gmem_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWID\" :  \"" << m_axi_gmem_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWLEN\" :  \"" << m_axi_gmem_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWSIZE\" :  \"" << m_axi_gmem_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWBURST\" :  \"" << m_axi_gmem_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWLOCK\" :  \"" << m_axi_gmem_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWCACHE\" :  \"" << m_axi_gmem_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWPROT\" :  \"" << m_axi_gmem_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWQOS\" :  \"" << m_axi_gmem_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWREGION\" :  \"" << m_axi_gmem_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWUSER\" :  \"" << m_axi_gmem_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WVALID\" :  \"" << m_axi_gmem_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_WREADY\" :  \"" << m_axi_gmem_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WDATA\" :  \"" << m_axi_gmem_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WSTRB\" :  \"" << m_axi_gmem_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WLAST\" :  \"" << m_axi_gmem_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WID\" :  \"" << m_axi_gmem_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WUSER\" :  \"" << m_axi_gmem_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARVALID\" :  \"" << m_axi_gmem_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_ARREADY\" :  \"" << m_axi_gmem_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARADDR\" :  \"" << m_axi_gmem_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARID\" :  \"" << m_axi_gmem_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARLEN\" :  \"" << m_axi_gmem_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARSIZE\" :  \"" << m_axi_gmem_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARBURST\" :  \"" << m_axi_gmem_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARLOCK\" :  \"" << m_axi_gmem_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARCACHE\" :  \"" << m_axi_gmem_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARPROT\" :  \"" << m_axi_gmem_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARQOS\" :  \"" << m_axi_gmem_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARREGION\" :  \"" << m_axi_gmem_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARUSER\" :  \"" << m_axi_gmem_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RVALID\" :  \"" << m_axi_gmem_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_RREADY\" :  \"" << m_axi_gmem_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RDATA\" :  \"" << m_axi_gmem_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RLAST\" :  \"" << m_axi_gmem_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RID\" :  \"" << m_axi_gmem_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RUSER\" :  \"" << m_axi_gmem_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RRESP\" :  \"" << m_axi_gmem_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BVALID\" :  \"" << m_axi_gmem_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_BREADY\" :  \"" << m_axi_gmem_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BRESP\" :  \"" << m_axi_gmem_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BID\" :  \"" << m_axi_gmem_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BUSER\" :  \"" << m_axi_gmem_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

